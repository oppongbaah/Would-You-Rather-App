{"version":3,"sources":["redux/middlewares/mwUsers.js","redux/actionCreators/acUsers.js","Components/NavBar.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/Signup.js"],"names":["cookies","Cookies","api","fetchUsers","dispatch","axios","get","then","users","type","actions","actionCreators","data","catch","err","console","log","authedUser","user","login","credentials","a","fetch","method","headers","json","error","signup","history","body","JSON","stringify","text","alert","set","_id","push","connect","state","props","userId","image","filter","imageURL","map","length","className","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","exact","to","role","aria-haspopup","aria-labelledby","pathname","desc","src","alt","message","onClick","e","remove","path","bind","this","_arrayLikeToArray","arr","len","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","value","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","dispatch_fetchUsers","dispatch_authedUser","withRouter","useState","firstname","setFirstname","lastname","setLastname","password","setPassword","comfirmPassword","setComfirmPassword","file","setFileName","useEffect","getUserId","split","validated","toLowerCase","concat","getUsername","getImageURL","getPassword","match","location","encType","onSubmit","preventDefault","username","onChange","target","files","placeholder"],"mappings":"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","file":"static/js/5.ac23bf40.chunk.js","sourcesContent":["import * as actionCreators from '../actionCreators/acUsers';\r\nimport Cookies from 'universal-cookie';\r\nimport axios from 'axios';\r\n\r\nconst cookies = new Cookies();\r\n\r\n// const api = 'https://wouldyouratherapplication.herokuapp.com';\r\nconst api = 'http://localhost:4000';\r\n\r\nexport function fetchUsers() {\r\n    return (dispatch => {\r\n        axios.get(`${api}/users/fetch-all`)\r\n        .then(users => {\r\n            dispatch(actionCreators.loadUser(users.data))\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    })\r\n}\r\n\r\nexport function authedUser(user) {\r\n    return (dispatch => {\r\n        dispatch(actionCreators.getAuthedUser(user))\r\n    })\r\n}\r\n\r\nexport async function login(credentials) {\r\n    try {\r\n        return await fetch(`${api}/users/login/`, {\r\n          method: 'POST',\r\n          headers: {\r\n            \"Access-Control-Allow-Origin\": api,\r\n            \"Content-Type\": \"application/json\",\r\n            'Authorization': `Basic ${credentials}`\r\n          }\r\n        })\r\n        .then(data => data.json())\r\n        .catch(err => console.log(err))\r\n    }\r\n    catch (e) {console.error(e)}\r\n}\r\n\r\nexport async function signup(credentials, history) {\r\n    return fetch(`${api}/users/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(credentials)\r\n      })\r\n      .then(data => {\r\n        data.text().then(text => {\r\n            alert(text);\r\n            cookies.set(\"authedUser\", credentials._id);\r\n            history.push(\"/\");\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n}","import * as actions from '../actions';\r\n\r\nexport function loadUser(users) {\r\n    return {\r\n        type: actions.ADD_USER,\r\n        users\r\n    }\r\n}\r\n\r\nexport function getAuthedUser(user) {\r\n    return {\r\n        type: actions.AUTHED_USER,\r\n        authedUser: user\r\n    }\r\n}","import React from 'react';\nimport {NavLink, Link, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport '../styles/App.css';\nimport Cookies from 'universal-cookie';\nimport {IoMdArrowDropdown} from 'react-icons/io';\n\nconst cookies = new Cookies();\n\nfunction Navigation(props){\n\n  const logout = (e) => {\n    if (cookies.get(\"authedUser\")) {\n      cookies.remove(\"authedUser\", {path: \"/\"})\n    }\n    else {\n      return <Redirect to='/users/login' />\n    }\n    \n  }\n\n  const getImageURL = (userId) => {\n    return props.users\n    .filter(user => user._id === userId && user.imageURL)\n    .map(user => user.imageURL)\n  }\n\n  const image = getImageURL(props.authedUser);\n\n  const imageURL = image.length ? `usersAvatar/${image}` \n  : 'usersAvatar/avatar.png';\n \n  return (\n    <>\n      <div className=\"container-nav\">\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n    \n        <nav id=\"navbarSupportedContent\" className=\"navbar navbar-expand-lg navbar-light bg-warning\">\n\n          <div className=\"collapse navbar-collapse\">\n              <ul className=\"navbar-nav ml-auto topnav\">\n                <li className=\"nav-item\">\n                  <NavLink\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    exact to=\"/\">\n                    Dashboard\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    to=\"/new-poll\">\n                    New Poll\n                  </NavLink>\n                </li>\n\n                <li className=\"dropd\">\n                  <div className=\"nav-item dropdown\">  \n                    <p className=\"nav-link dropdown-toggle\" \n                      id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" \n                      aria-haspopup=\"true\" aria-expanded=\"false\">\n                        {props.authedUser}<IoMdArrowDropdown />   \n                    </p>\n                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                        <div className=\"dropdown-divider\"></div>\n                        <Link className=\"dropdown-item\"\n                          to={{\n                            pathname:'/users/signup',\n                            state: {desc:'sign up'}  \n                            }}>\n                          Sign Up\n                        </Link>\n                    </div>\n                  </div>\n                </li>\n                {\n                  cookies.get(\"authedUser\") &&\n                    <li className=\"image\" >\n                      <img src={imageURL} alt=\"avatar\" />\n                    </li>\n                }\n                <li className=\"nav-item signin\">\n                  <>\n                    <NavLink className=\"nav-link btn btn-primary text-white\" activeClassName=\"active\"\n                     to={{\n                      pathname:'/users/login',\n                      state: {desc:'sign in'}\n                    }}>\n                       Login</NavLink>\n                  </>       \n                </li>\n                <li className=\"nav-item signout\">\n                    <NavLink className=\"nav-link btn btn-danger text-white\" \n                      to={{\n                      pathname:'/users/logout',\n                      state: {desc:'sign out', message: \"Thank you for your time. Bye!\"}  \n                      }} onClick={logout.bind(this)}>\n                        Logout\n                    </NavLink>\n                </li>\n              </ul>\n              <div>\n              </div>\n          </div>\n        </nav>\n      </div>\n    </>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    authedUser: state.authedUser,\n    users: state.users\n  }\n}\n\nexport default connect(mapStateToProps)(Navigation);\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport {fetchUsers, authedUser} from '../redux/middlewares/mwUsers';\nimport Navigation from './NavBar';\nimport '../styles/login.css';\nimport '../styles/App.css';\nimport {signup} from '../redux/middlewares/mwUsers';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nconst Signup = (props) => {\n\n    const [firstname, setFirstname] = useState(\"\");\n    const [lastname, setLastname] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [comfirmPassword, setComfirmPassword] = useState(\"\");\n    const [file, setFileName] = useState(\"\");\n\n    /* eslint-disable */\n    useEffect(() => {\n        props.dispatch_fetchUsers();\n    }, [])\n\n    useEffect(() => {\n        if(cookies.get(\"authedUser\")) {\n            props.dispatch_authedUser(cookies.get(\"authedUser\"));\n        }\n    }, [])\n    /* eslint-enable */\n\n    const handleFirstname = (e) => {\n        setFirstname(e.target.value);\n    }\n\n    const handleLastname = (e) => {\n        setLastname(e.target.value);\n    }\n\n    const handlePassword = (e) => {\n        setPassword(e.target.value);   \n    }\n\n    const handleComfirmPassword = (e) => {\n        setComfirmPassword(e.target.value);\n    }\n\n    const handleImageUpload = (e) => {\n        setFileName(e.target.files);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(firstname === \"\" || lastname === \"\" || password === \"\" || comfirmPassword === \"\"){\n            alert(\"All the fields are required\");\n            e.preventDefault();\n        }\n        else {\n            if (getPassword().match && getUserId().validated) {\n                signup({\n                    _id: getUserId().id,\n                    username: getUsername(),\n                    imageURL: getImageURL(),\n                    password: getPassword().password\n                }, props.history);\n            }\n            else if (!getPassword().match) {\n                alert(getPassword().password);\n            }\n            else if (!getUserId().validated) {\n                alert(getUserId().id);\n            }\n        }\n    }\n\n    const getUserId = () => {\n        if (firstname.split(\" \").length > 1 || lastname.split(\" \").length > 1) {\n            return {id: \"Name fields must not have any special character\",\n             validated: false}\n        }\n        else {\n            const id = firstname.toLowerCase().concat(lastname.toLowerCase())\n            return {id, validated: true};\n        }\n    }\n\n\n    const getUsername = () => {\n        return firstname.concat(\" \", lastname);\n    }\n\n    const getImageURL = () => {\n        return file ? file[0].name : \"\";\n    }\n\n    const getPassword = () => {\n        return password === comfirmPassword ?\n         {password, match: true} :\n         {password: \"Password and comfirm password do not match\", match: false}\n    }\n\n    return (\n        <>\n        <Navigation />\n        <div className=\"container\">\n        <div className=\"d-flex justify-content-center h-100\">\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    <h3>{props.location.state ? props.location.state.desc : \"sign up\"}</h3>\n                </div>\n                <div className=\"card-body\">\n                    <form encType=\"multipart-form-data\" onSubmit={handleSubmit.bind(this)}>\n                        <div className=\"sign-up-image input-group form-group\"> \n                            <img src=\"usersAvatar/avatar.png\" alt=\"avatar\" />\n                        </div>\n                        <div className=\"update\">\n                            <input type=\"file\" name=\"myImage\" \n                            onChange={handleImageUpload.bind(this)}/>\n                        </div>\n                        <div className=\"input-group form-group\">\n                            <input type=\"text\" onChange={handleFirstname.bind(this)}\n                            className=\"input-control\" placeholder=\"firstname\" />\n                            <input type=\"text\" onChange={handleLastname.bind(this)}\n                            className=\"input-control\" placeholder=\"lastname\" />\n                        </div>\n                        <div className=\"input-group form-group\">\n                            <input type=\"password\" className=\"input-control\" \n                            placeholder=\"password\" onChange={handlePassword.bind(this)} />\n                            <input type=\"password\" className=\"input-control\" \n                            placeholder=\"comfirm password\" \n                            onChange={handleComfirmPassword.bind(this)} />\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"submit\" value=\"Sign Up\"\n                             className= \"btn float-right login_btn\" />\n                        </div>\n                    </form>\n                </div>\n                <div className=\"card-footer\">\n                    <div className=\"d-flex justify-content-center links\">\n                        Already have an account?\n                        <Link\n                        to={{\n                            pathname:'/users/login',\n                            state: {desc:'sign in'}\n                        }}>\n                        Log in</Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        users: state.users,\n        authedUser: state.authedUser\n    }\n}\n  \nconst mapDispatchToProps = dispatch => {\n    return {\n        dispatch_fetchUsers: () => dispatch(fetchUsers()), \n        dispatch_authedUser: (user) => dispatch(authedUser(user))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Signup));"],"sourceRoot":""}