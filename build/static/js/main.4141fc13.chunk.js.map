{"version":3,"sources":["redux/actions.js","App.js","reportWebVitals.js","redux/store.js","redux/reducers/rdUsers.js","index.js"],"names":["ADD_USER","STATUS","Dashboard","lazy","PollDetails","NewPoll","App","className","fallback","exact","path","component","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","userStatus","state","action","type","actions","payload","users","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","applyMiddleware","ReduxThunk","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGAAA,oEAAO,IACMA,EAAW,WACXC,EAAS,e,oMCIhBC,EAAYC,gBAAK,kBAAM,sDACvBC,EAAcD,gBAAK,kBAAM,gCACzBE,EAAUF,gBAAK,kBAAM,gCAqBZG,E,4JAjBb,WACE,OACE,qBAAKC,UAAU,YAAf,SACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,uBAAuBC,UAAWT,IACpD,cAAC,IAAD,CAAOQ,KAAK,UAAUC,UAAWP,IACjC,cAAC,IAAD,CAAOM,KAAK,YAAYC,UAAWN,iB,GAV/BO,aCEHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mCCDRQ,EAAcC,YAAgB,CAChCC,WCIJ,WAA8C,IAAnBC,EAAkB,uDAAZ,GAAIC,EAAQ,uCACzC,OAAGA,EAAOC,OAASC,IACRF,EAAOG,QAGPJ,GDRXK,MCNJ,WAAuC,IAAlBL,EAAiB,uDAAX,GAAIC,EAAO,uCAClC,OAAOA,EAAOC,MACV,KAAKC,IACD,MAAM,GAAN,mBAAWH,GAAX,CAAkBC,EAAOG,UAC7B,QACI,OAAOJ,MDWbM,GANY,kBAAXC,QACPA,OAAOC,qCACLD,OAAOC,qCAAqC,CAC1CC,OAAO,EAAMC,WAAY,KACxBC,KAGHC,YAAgBC,MAKHC,EAFDC,YAAYlB,EAAaS,GEdvCU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1BhC,M","file":"static/js/main.4141fc13.chunk.js","sourcesContent":["export const ADD_POLL = \"poll/add\";\r\nexport const ADD_USER = \"user/add\";\r\nexport const STATUS = 'user/status';","import {Component, Suspense, lazy} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './styles/App.css';\n// import useLocationBlocker from './LocationBlocker'\n\n// import components using the lazy method from the react library\nconst Dashboard = lazy(() => import('./Components/Dashboard'));\nconst PollDetails = lazy(() => import('./Components/PollDetails'));\nconst NewPoll = lazy(() => import('./Components/NewPoll'));\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Router>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Switch>\n              <Route exact path=\"http:localhost:4000/\" component={Dashboard} />\n              <Route path=\"/poll  \" component={PollDetails}/>\n              <Route path=\"/new-poll\" component={NewPoll}/>\n            </Switch>\n          </Suspense>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\n// import pollReducer from './reducers/rdPoll';\r\nimport {userReducer, userStatusReducer} from './reducers/rdUsers';\r\nimport ReduxThunk from 'redux-thunk';\r\n// import logger from 'redux-logger';\r\n\r\nconst rootReducer = combineReducers({\r\n    userStatus: userStatusReducer,\r\n    users: userReducer\r\n  });\r\n\r\nconst composeEnhancers =\r\ntypeof window === 'object' &&\r\nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    trace: true, traceLimit: 25\r\n}) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(ReduxThunk)\r\n);\r\n\r\nconst store = createStore(rootReducer, enhancer);\r\n  \r\nexport default store;","import * as actions from '../actions';\r\n\r\nfunction userReducer(state=[], action){\r\n    switch(action.type){\r\n        case actions.ADD_USER:\r\n            return [...state, action.payload]\r\n        default:\r\n            return state;\r\n    }\r\n}   \r\n\r\nfunction userStatusReducer(state=\"\", action) {\r\n    if(action.type === actions.STATUS){\r\n        return action.payload\r\n    }\r\n    else {\r\n        return state\r\n    }\r\n}\r\n\r\nexport {\r\n    userReducer,\r\n    userStatusReducer\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}