{"version":3,"sources":["redux/middlewares/mwUsers.js","redux/actionCreators/acUsers.js","Components/NavBar.js","Components/Logout.js"],"names":["cookies","Cookies","api","fetchUsers","dispatch","axios","get","then","users","type","actions","actionCreators","data","catch","err","console","log","authedUser","user","login","credentials","a","fetch","method","headers","json","error","signup","history","body","JSON","stringify","text","alert","set","_id","push","connect","state","props","userId","image","filter","imageURL","map","length","className","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","exact","to","role","aria-haspopup","aria-labelledby","pathname","desc","src","alt","message","onClick","e","remove","path","bind","this","autherUser","dispatch_fetchUsers","dispatch_authedUser","useEffect","logout","location"],"mappings":"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","file":"static/js/6.46d0e1a5.chunk.js","sourcesContent":["import * as actionCreators from '../actionCreators/acUsers';\r\nimport Cookies from 'universal-cookie';\r\nimport axios from 'axios';\r\n\r\nconst cookies = new Cookies();\r\n\r\n// const api = 'https://wouldyouratherapplication.herokuapp.com';\r\nconst api = 'http://localhost:4000';\r\n\r\nexport function fetchUsers() {\r\n    return (dispatch => {\r\n        axios.get(`${api}/users/fetch-all`)\r\n        .then(users => {\r\n            dispatch(actionCreators.loadUser(users.data))\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    })\r\n}\r\n\r\nexport function authedUser(user) {\r\n    return (dispatch => {\r\n        dispatch(actionCreators.getAuthedUser(user))\r\n    })\r\n}\r\n\r\nexport async function login(credentials) {\r\n    try {\r\n        return await fetch(`${api}/users/login/`, {\r\n          method: 'POST',\r\n          headers: {\r\n            \"Access-Control-Allow-Origin\": api,\r\n            \"Content-Type\": \"application/json\",\r\n            'Authorization': `Basic ${credentials}`\r\n          }\r\n        })\r\n        .then(data => data.json())\r\n        .catch(err => console.log(err))\r\n    }\r\n    catch (e) {console.error(e)}\r\n}\r\n\r\nexport async function signup(credentials, history) {\r\n    return fetch(`${api}/users/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(credentials)\r\n      })\r\n      .then(data => {\r\n        data.text().then(text => {\r\n            alert(text);\r\n            cookies.set(\"authedUser\", credentials._id);\r\n            history.push(\"/\");\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n}","import * as actions from '../actions';\r\n\r\nexport function loadUser(users) {\r\n    return {\r\n        type: actions.ADD_USER,\r\n        users\r\n    }\r\n}\r\n\r\nexport function getAuthedUser(user) {\r\n    return {\r\n        type: actions.AUTHED_USER,\r\n        authedUser: user\r\n    }\r\n}","import React from 'react';\nimport {NavLink, Link, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport '../styles/App.css';\nimport Cookies from 'universal-cookie';\nimport {IoMdArrowDropdown} from 'react-icons/io';\n\nconst cookies = new Cookies();\n\nfunction Navigation(props){\n\n  const logout = (e) => {\n    if (cookies.get(\"authedUser\")) {\n      cookies.remove(\"authedUser\", {path: \"/\"})\n    }\n    else {\n      return <Redirect to='/users/login' />\n    }\n    \n  }\n\n  const getImageURL = (userId) => {\n    return props.users\n    .filter(user => user._id === userId && user.imageURL)\n    .map(user => user.imageURL)\n  }\n\n  const image = getImageURL(props.authedUser);\n\n  const imageURL = image.length ? `usersAvatar/${image}` \n  : 'usersAvatar/avatar.png';\n \n  return (\n    <>\n      <div className=\"container-nav\">\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n    \n        <nav id=\"navbarSupportedContent\" className=\"navbar navbar-expand-lg navbar-light bg-warning\">\n\n          <div className=\"collapse navbar-collapse\">\n              <ul className=\"navbar-nav ml-auto topnav\">\n                <li className=\"nav-item\">\n                  <NavLink\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    exact to=\"/\">\n                    Dashboard\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    to=\"/new-poll\">\n                    New Poll\n                  </NavLink>\n                </li>\n\n                <li className=\"dropd\">\n                  <div className=\"nav-item dropdown\">  \n                    <p className=\"nav-link dropdown-toggle\" \n                      id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" \n                      aria-haspopup=\"true\" aria-expanded=\"false\">\n                        {props.authedUser}<IoMdArrowDropdown />   \n                    </p>\n                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                        <div className=\"dropdown-divider\"></div>\n                        <Link className=\"dropdown-item\"\n                          to={{\n                            pathname:'/users/signup',\n                            state: {desc:'sign up'}  \n                            }}>\n                          Sign Up\n                        </Link>\n                    </div>\n                  </div>\n                </li>\n                {\n                  cookies.get(\"authedUser\") &&\n                    <li className=\"image\" >\n                      <img src={imageURL} alt=\"avatar\" />\n                    </li>\n                }\n                <li className=\"nav-item signin\">\n                  <>\n                    <NavLink className=\"nav-link btn btn-primary text-white\" activeClassName=\"active\"\n                     to={{\n                      pathname:'/users/login',\n                      state: {desc:'sign in'}\n                    }}>\n                       Login</NavLink>\n                  </>       \n                </li>\n                <li className=\"nav-item signout\">\n                    <NavLink className=\"nav-link btn btn-danger text-white\" \n                      to={{\n                      pathname:'/users/logout',\n                      state: {desc:'sign out', message: \"Thank you for your time. Bye!\"}  \n                      }} onClick={logout.bind(this)}>\n                        Logout\n                    </NavLink>\n                </li>\n              </ul>\n              <div>\n              </div>\n          </div>\n        </nav>\n      </div>\n    </>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    authedUser: state.authedUser,\n    users: state.users\n  }\n}\n\nexport default connect(mapStateToProps)(Navigation);\n","import React, {useEffect} from 'react';\nimport Navigation from './NavBar';\nimport '../styles/login.css';\nimport {NavLink} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {fetchUsers, authedUser} from '../redux/middlewares/mwUsers';\n\nfunction Logout(props) {\n\n    /* eslint-disable */\n    useEffect(() => {\n        props.dispatch_fetchUsers();\n        props.dispatch_authedUser(\"Guest\");\n    }, [])\n    /* eslint-enable */\n\n    return(\n      <>\n        <Navigation  logout={true}/>\n        <h3 className=\"message\"> {props.location.state.message} </h3>\n        <NavLink className=\"login-again\" \n            to={{\n            pathname:'/users/login',\n            state: {desc:'sign out', message: \"Thank you. Bye!\"}  \n            }}>\n            Login again\n        </NavLink>\n      </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        users: state.users,\n        authedUser: state.autherUser\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        dispatch_fetchUsers: () => dispatch(fetchUsers()),  \n        dispatch_authedUser: (user) => dispatch(authedUser(user))\n    }\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Logout);\n\n"],"sourceRoot":""}